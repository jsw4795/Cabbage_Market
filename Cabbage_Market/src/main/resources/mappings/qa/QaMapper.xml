<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="QaDAO">

	<!-- 검색 조건 ******************************** -->
	
	<!-- getQaList_T -->
	<select id="getQaKeywordList_T" parameterType="Map" resultType="qa">
	    SELECT *
		FROM QA
		WHERE QA_TITLE LIKE '%'|| #{searchKeyword} ||'%'
		ORDER BY QA_REGDATE DESC
	</select>
	
	<!-- getQaList_C -->
	<select id="getQaKeywordList_C" parameterType="qa" resultType="qa">
	    SELECT *
		FROM QA
		WHERE QA_CONTENT LIKE '%'|| #{searchKeyword} ||'%'
		ORDER BY QA_REGDATE DESC
	</select>
	
	<!-- getQaList_TC -->
	<select id="getQaKeywordList_TC" parameterType="qa" resultType="qa">
	    SELECT *
	    FROM QA
	    WHERE USER_ID = #{userId}
	    <if test='searchCondition == "TITLE" and searchKeyword != "" '>
	        AND QA_TITLE LIKE '%'|| #{searchKeyword} ||'%'
	    </if>
	    <if test='searchCondition == "CONTENT" and searchKeyword != "" '>
	        AND QA_CONTENT LIKE '%'|| #{searchKeyword} ||'%'
	    </if>
	    ORDER BY QA_REGDATE DESC
	</select>
	
	
	
	<!-- 1:1 문의 FORM, FORMLIST, FORMDETAIL ******************************** -->
	
	<!-- 게시글 하나 조회 -->
	<select id="getQa" parameterType="qa" resultType="qa">
		SELECT *
		FROM QA
		WHERE QA_ID = #{qaId}
	</select>
	
	
	<!-- QA & QA_CATEGORY 테이블 조인 / 문의내역 조회 -->
	<select id="getQaList" parameterType="String" resultType="qa">
		SELECT QA.QA_ID, QA.USER_ID, QA.QA_CAT_ID, QA.QA_TITLE, QA.QA_CONTENT, QA.QA_REGDATE, 
		       QA.QA_STATUS, QC.QA_CAT_ID, QC.QA_CAT_NAME, QC.QA_CAT_CONTENT, QP.FILE_ID
		FROM QA QA
		JOIN QA_CATEGORY QC ON QA.QA_CAT_ID = QC.QA_CAT_ID
		LEFT JOIN QA_PIC QP ON QA.QA_ID = QP.QA_ID
		WHERE QA.USER_ID = #{userId} AND QA.QA_STATUS != 'DELETED'
		ORDER BY QA.QA_REGDATE DESC
	</select>
	
	
	<!-- 1:1 문의하기 INSERT -->
 	<!-- <insert id="insertQa" parameterType="qa">
		INSERT ALL 
        INTO QA (QA_ID, USER_ID, QA_CAT_ID, QA_TITLE, QA_CONTENT, QA_REGDATE)
        VALUES (QA_ID_SEQ.NEXTVAL, #{userId}, #{qaCatId}, #{qaTitle}, #{qaContent}, SYSDATE)
        INTO FILES (FILE_ID, USER_ID, FILE_NAME, FILE_REGDATE, FILE_TYPE)
        VALUES (FILE_ID_SEQ.NEXTVAL, #{userId}, #{fileName}, SYSDATE, #{uploadFile.contentType})
        INTO QA_PIC (QA_ID, FILE_ID)
        VALUES (QA_ID_SEQ.CURRVAL, FILE_ID_SEQ.CURRVAL)
    	SELECT * FROM DUAL
	</insert> -->
	
    <!-- 선택적인 이미지 업로드 -->
	<insert id="insertQa" parameterType="qa">
	    <choose>
	        <!-- 이미지를 업로드하는 경우 -->
	        <when test="fileName != null and uploadFile != null">
	            INSERT ALL 
	            INTO QA (QA_ID, USER_ID, QA_CAT_ID, QA_TITLE, QA_CONTENT, QA_REGDATE)
	            VALUES (QA_ID_SEQ.NEXTVAL, #{userId}, #{qaCatId}, #{qaTitle}, #{qaContent}, SYSDATE)
	            INTO FILES (FILE_ID, USER_ID, FILE_NAME, FILE_REGDATE)
	            VALUES (FILE_ID_SEQ.NEXTVAL, #{userId}, #{fileName}, SYSDATE)
	            INTO QA_PIC (QA_ID, FILE_ID)
	            VALUES (QA_ID_SEQ.CURRVAL, FILE_ID_SEQ.CURRVAL)
	            SELECT * FROM DUAL
	        </when>
	        <!-- 이미지를 업로드하지 않는 경우 -->
	        <otherwise>
	            INSERT ALL 
	            INTO QA (QA_ID, USER_ID, QA_CAT_ID, QA_TITLE, QA_CONTENT, QA_REGDATE)
	            VALUES (QA_ID_SEQ.NEXTVAL, #{userId}, #{qaCatId}, #{qaTitle}, #{qaContent}, SYSDATE)
	            SELECT * FROM DUAL
	        </otherwise>
	    </choose>
	</insert>
	
	
	<!-- 1:1 문의내역 VIEW -->
	<select id="getQaFormDetail" parameterType="qa" resultType="qa">
		SELECT QA.QA_ID, QA.USER_ID, QA.QA_CAT_ID, QA.QA_TITLE, QA.QA_CONTENT, QA.QA_REGDATE, 
		       QA.QA_STATUS, QA.QA_COMMENT, QC.QA_CAT_ID, QC.QA_CAT_NAME, QC.QA_CAT_CONTENT, 
		       QP.QA_ID, QP.FILE_ID, F.FILE_ID, F.USER_ID, F.FILE_NAME, F.FILE_REGDATE
		FROM QA QA
		JOIN QA_CATEGORY QC ON QA.QA_CAT_ID = QC.QA_CAT_ID
		LEFT JOIN QA_PIC QP ON QA.QA_ID = QP.QA_ID
		LEFT JOIN FILES F ON QP.FILE_ID = F.FILE_ID
		WHERE QA.QA_ID = #{qaId}
	</select>
	
	<!-- 1:1 문의내역에서 ADMIN 댓글 보여주기 -->
	<select id="getQaFormDetailFromAdmin" parameterType="qa" resultType="qa">
		SELECT QA.QA_ID, QA.USER_ID, QA.QA_CAT_ID, QA.QA_TITLE, QA.QA_CONTENT, QA.QA_REGDATE, 
		       QA.QA_STATUS, QA.QA_COMMENT, QC.QA_CAT_ID, QC.QA_CAT_NAME, QC.QA_CAT_CONTENT, 
		       QP.QA_ID, QP.FILE_ID, F.FILE_ID, F.USER_ID, F.FILE_NAME, F.FILE_REGDATE
		FROM QA QA
		JOIN QA_CATEGORY QC ON QA.QA_CAT_ID = QC.QA_CAT_ID
		LEFT JOIN QA_PIC QP ON QA.QA_ID = QP.QA_ID
		LEFT JOIN FILES F ON QP.FILE_ID = F.FILE_ID
		WHERE QA.QA_ID = #{qaId}
	</select>
	
	<!-- 1:1 문의내역 DELETE인데 DB에서 삭제가 아닌 status 상태 바꿈 처리!! -->
	<update id="deleteQaFormDetail" parameterType="qa">
		UPDATE QA
		SET QA_STATUS = 'DELETED'
		WHERE QA_ID = #{qaId}
	</update>
	
	
	<!-- ADMIN ****************************************************** -->
	
	<!-- ADMIN 관리자모드에서 사용자 문의내역 LIST -->
	<select id="getAdminQaList" parameterType="qa" resultType="qa">
		SELECT QA.QA_ID, QA.USER_ID, QA.QA_CAT_ID, QA.QA_TITLE, QA.QA_CONTENT, QA.QA_REGDATE, 
		       QA.QA_STATUS, QC.QA_CAT_ID, QC.QA_CAT_NAME
		FROM QA QA
		JOIN QA_CATEGORY QC ON QA.QA_CAT_ID = QC.QA_CAT_ID
		ORDER BY QA_REGDATE DESC
	</select>
	
	<!-- ADMIN 관리자모드에서 사용자 문의내역 VIEW -->
	<select id="getAdminQaFormDetail" parameterType="qa" resultType="qa">
		SELECT QA.QA_ID, QA.USER_ID, QA.QA_CAT_ID, QA.QA_TITLE, QA.QA_CONTENT, QA.QA_REGDATE, 
		       QA.QA_STATUS, QA.QA_COMMENT, QC.QA_CAT_ID, QC.QA_CAT_NAME, QC.QA_CAT_CONTENT, 
		       QP.QA_ID, QP.FILE_ID, F.FILE_ID, F.USER_ID, F.FILE_NAME, F.FILE_REGDATE
		FROM QA QA
		JOIN QA_CATEGORY QC ON QA.QA_CAT_ID = QC.QA_CAT_ID
		LEFT JOIN QA_PIC QP ON QA.QA_ID = QP.QA_ID
		LEFT JOIN FILES F ON QP.FILE_ID = F.FILE_ID
		WHERE QA.QA_ID = #{qaId}
	</select>
	
	
	<!-- ADMIN 관리자모드에서 관리자의 댓글 INSERT -->
	<insert id="insertAdminComment" parameterType="qa">
		UPDATE QA
		SET
			QA_COMMENT = #{qaComment},
			QA_STATUS = 'FINISHED'
		WHERE
			QA_ID = #{qaId}
	</insert>
	
	<!-- ADMIN 관리자모드에서 관리자의 댓글 UPDATE -->
	<!-- <update id="deleteQaFormDetail" parameterType="qa">
		UPDATE QA
		SET QA_STATUS = 'DELETED'
		WHERE QA_ID = #{qaId}
	</update> -->
	
	
	
	
	<!-- ADMIN 관리자모드에서 관리자의 댓글 DELETE -->
	<delete id="deleteAdminComment" parameterType="qa">
		DELETE FROM QA WHERE QA_ID = #{qaId } 
	</delete>
	
	
	
	
	
	<!-- Category *********************************************************** -->
	
	<!-- 카테고리 목록 조회 -->
    <select id="getQaCategoryList" resultType="qa">
        SELECT * FROM QA_CATEGORY
    </select>
	
	
	<!-- 카테고리별로 해당하는 내용 가져오기 -->
    <select id="getQaCatContentByCategoryId" resultType="String">
        SELECT QA_CAT_CONTENT FROM QA_CATEGORY WHERE QA_CAT_ID = #{categoryId}
    </select>
	
	
</mapper>