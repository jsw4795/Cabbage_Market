<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="chatRoom">
	
	<select id="getChatRoom" resultType="chatRoomVO" parameterType="chatRoomVO">
		SELECT CHAT_ROOM_ID, POST_ID, CHAT_ROOM_REGDATE
		FROM
			CHAT_ROOM
		WHERE
			CHAT_ROOM_ID = #{chatRoomId}
	</select>
	
	<!-- 채팅 메인에 들어갈때 채팅방 목록을 위한 데이터 리스트 뽑기 -->
	<select id="getChatRoomListByUserId" resultType="chatRoomVO" parameterType="userVO">
		SELECT CHAT_ROOM_ID, POST_ID, CHAT_ROOM_REGDATE
			, (SELECT MESSAGE_CONTENT FROM CHAT_MESSAGE WHERE MESSAGE_ID = (SELECT MAX(MESSAGE_ID) FROM  CHAT_MESSAGE WHERE CHAT_ROOM_ID = C.CHAT_ROOM_ID AND MESSAGE_TYPE IN ('CHAT', 'PIC', 'DEL', 'EMOJI', 'PAY'))) 
				LAST_MESSAGE
			, (SELECT MESSAGE_TYPE FROM CHAT_MESSAGE WHERE MESSAGE_ID = (SELECT MAX(MESSAGE_ID) FROM  CHAT_MESSAGE WHERE CHAT_ROOM_ID = C.CHAT_ROOM_ID AND MESSAGE_TYPE IN ('CHAT', 'PIC', 'DEL', 'EMOJI', 'PAY'))) 
				LAST_MESSAGE_TYPE
            , (SELECT TRUNC((SYSDATE - MESSAGE_TIME) * 24 * 60 * 60) FROM CHAT_MESSAGE WHERE MESSAGE_ID = (SELECT MAX(MESSAGE_ID) FROM  CHAT_MESSAGE WHERE CHAT_ROOM_ID = C.CHAT_ROOM_ID AND MESSAGE_TYPE IN ('CHAT', 'PIC', 'DEL', 'EMOJI', 'PAY'))) 
                LAST_MESSAGE_TIME
            , (SELECT USER_NICKNAME FROM USERS WHERE USER_ID = (SELECT USER_ID FROM CHAT_ROOM_USER WHERE CHAT_ROOM_ID = C.CHAT_ROOM_ID AND USER_ID IN (SELECT USER_ID FROM USERS WHERE USER_STATUS != 'WITHDRWAL') AND USER_ID != #{userId}))
                OTHER_USER_NICKNAME
            , (SELECT FILE_NAME FROM FILES WHERE FILE_ID = (SELECT FILE_ID FROM PROFILE_PIC WHERE USER_ID = (SELECT USER_ID FROM CHAT_ROOM_USER WHERE CHAT_ROOM_ID = C.CHAT_ROOM_ID AND USER_ID IN (SELECT USER_ID FROM USERS WHERE USER_STATUS != 'WITHDRWAL') AND USER_ID != #{userId})))
                OTHER_USER_PROFILE_PIC
            , (SELECT FILE_NAME FROM FILES WHERE FILE_ID = (SELECT MIN(FILE_ID) FROM POST_PIC WHERE POST_ID = (SELECT POST_ID FROM POST WHERE POST_ID = C.POST_ID AND POST_STATUS != 'DELETE')))
                FIRST_POST_PIC
            , (SELECT UNREAD_MESSAGE_COUNT FROM CHAT_ROOM_USER WHERE USER_ID = #{userId} AND CHAT_ROOM_ID = C.CHAT_ROOM_ID)
            	UNREAD_MESSAGE_COUNT
            , (SELECT MAX(COUNT_BY_ROOM) FROM CHAT_MESSAGE WHERE CHAT_ROOM_ID = C.CHAT_ROOM_ID)
            	LAST_MESSAGE_COUNT_BY_ROOM
            , (SELECT EXIT_POINT FROM CHAT_ROOM_USER WHERE CHAT_ROOM_ID = C.CHAT_ROOM_ID AND USER_ID = #{userId})
        		EXIT_POINT
        	, (SELECT PAY_STATUS FROM CHAT_MESSAGE_PAY WHERE MESSAGE_ID = (SELECT MAX(MESSAGE_ID) FROM  CHAT_MESSAGE WHERE CHAT_ROOM_ID = C.CHAT_ROOM_ID AND MESSAGE_TYPE = 'PAY'))
       			LAST_PAY_STATUS
		FROM
			CHAT_ROOM C
		WHERE
			CHAT_ROOM_ID IN (SELECT CHAT_ROOM_ID FROM CHAT_ROOM_USER WHERE USER_ID = #{userId})
	</select>
	
	<select id="getChatRoomByUserIdAndChatRoomId" resultType="chatRoomVO" parameterType="chatRoomVO">
		SELECT CHAT_ROOM_ID, POST_ID, CHAT_ROOM_REGDATE
			, (SELECT MESSAGE_CONTENT FROM CHAT_MESSAGE WHERE MESSAGE_ID = (SELECT MAX(MESSAGE_ID) FROM  CHAT_MESSAGE WHERE CHAT_ROOM_ID = C.CHAT_ROOM_ID AND MESSAGE_TYPE IN ('CHAT', 'PIC', 'DEL', 'EMOJI', 'PAY'))) 
				LAST_MESSAGE
			, (SELECT MESSAGE_TYPE FROM CHAT_MESSAGE WHERE MESSAGE_ID = (SELECT MAX(MESSAGE_ID) FROM  CHAT_MESSAGE WHERE CHAT_ROOM_ID = C.CHAT_ROOM_ID AND MESSAGE_TYPE IN ('CHAT', 'PIC', 'DEL', 'EMOJI', 'PAY'))) 
				LAST_MESSAGE_TYPE
            , (SELECT TRUNC((SYSDATE - MESSAGE_TIME) * 24 * 60 * 60) FROM CHAT_MESSAGE WHERE MESSAGE_ID = (SELECT MAX(MESSAGE_ID) FROM  CHAT_MESSAGE WHERE CHAT_ROOM_ID = C.CHAT_ROOM_ID AND MESSAGE_TYPE IN ('CHAT', 'PIC', 'DEL', 'EMOJI', 'PAY'))) 
                LAST_MESSAGE_TIME
            , (SELECT USER_NICKNAME FROM USERS WHERE USER_ID = (SELECT USER_ID FROM CHAT_ROOM_USER WHERE CHAT_ROOM_ID = C.CHAT_ROOM_ID AND USER_ID IN (SELECT USER_ID FROM USERS WHERE USER_STATUS != 'WITHDRWAL') AND USER_ID != #{requestUserId}))
                OTHER_USER_NICKNAME
            , (SELECT FILE_NAME FROM FILES WHERE FILE_ID = (SELECT FILE_ID FROM PROFILE_PIC WHERE USER_ID = (SELECT USER_ID FROM CHAT_ROOM_USER WHERE CHAT_ROOM_ID = C.CHAT_ROOM_ID AND USER_ID IN (SELECT USER_ID FROM USERS WHERE USER_STATUS != 'WITHDRWAL') AND USER_ID != #{requestUserId})))
                OTHER_USER_PROFILE_PIC
            , (SELECT FILE_NAME FROM FILES WHERE FILE_ID = (SELECT MIN(FILE_ID) FROM POST_PIC WHERE POST_ID = (SELECT POST_ID FROM POST WHERE POST_ID = C.POST_ID AND POST_STATUS != 'DELETE')))
                FIRST_POST_PIC
            , (SELECT UNREAD_MESSAGE_COUNT FROM CHAT_ROOM_USER WHERE USER_ID = #{requestUserId} AND CHAT_ROOM_ID = C.CHAT_ROOM_ID)
            	UNREAD_MESSAGE_COUNT
            , (SELECT MAX(COUNT_BY_ROOM) FROM CHAT_MESSAGE WHERE CHAT_ROOM_ID = C.CHAT_ROOM_ID)
            	LAST_MESSAGE_COUNT_BY_ROOM
            , (SELECT PAY_STATUS FROM CHAT_MESSAGE_PAY WHERE MESSAGE_ID = (SELECT MAX(MESSAGE_ID) FROM  CHAT_MESSAGE WHERE CHAT_ROOM_ID = C.CHAT_ROOM_ID AND MESSAGE_TYPE = 'PAY'))
       			LAST_PAY_STATUS
		FROM
			CHAT_ROOM C
		WHERE
			CHAT_ROOM_ID = #{chatRoomId}
	</select>
	
	<select id="getLastMessageTimeListByChatRoomId" resultType="chatRoomVO" parameterType="java.util.List">
		SELECT CHAT_ROOM_ID
			, (SELECT TRUNC((SYSDATE - MESSAGE_TIME) * 24 * 60 * 60) FROM CHAT_MESSAGE WHERE MESSAGE_ID = (SELECT MAX(MESSAGE_ID) FROM  CHAT_MESSAGE WHERE CHAT_ROOM_ID = C.CHAT_ROOM_ID AND MESSAGE_TYPE IN ('CHAT', 'PIC', 'DEL', 'EMOJI', 'PAY'))) 
            	LAST_MESSAGE_TIME
        FROM
        	CHAT_ROOM C
        WHERE
        	CHAT_ROOM_ID IN 
        	<foreach collection="list" item="item" open="(" separator="," close=")" >
        		#{item}
        	</foreach>
	</select>
	
	
	<!-- 포스트에서 채팅버튼 눌럿을 때 포스트 아이디랑 유저 아이디로 채팅방을 찾는다 -->
	<select id="getChatRoomWhenRequest" resultType="chatRoomVO" parameterType="chatRoomVO">
		SELECT CHAT_ROOM_ID, POST_ID, CHAT_ROOM_REGDATE
		FROM
		    CHAT_ROOM
		WHERE 
		    CHAT_ROOM_ID = 
		            (SELECT CHAT_ROOM_ID 
		             FROM 
		                CHAT_ROOM_USER 
		             WHERE 
		                CHAT_ROOM_ID IN (SELECT CHAT_ROOM_ID FROM CHAT_ROOM WHERE POST_ID = #{postId})
		                AND
		                USER_ID = #{requestUserId}
		            )
	</select>
	
	<insert id="insertChatRoom" parameterType="chatRoomVO">
		INSERT INTO CHAT_ROOM
			(CHAT_ROOM_ID, POST_ID, CHAT_ROOM_REGDATE)
		VALUES
			(CHAT_ROOM_ID_SEQ.NEXTVAL, #{postId}, SYSDATE)
		
		<!-- 인서트 하고 시퀀스의 현재 값을 가져온다 -->
		<selectKey keyProperty="chatRoomId" resultType="long" order="AFTER" >
			SELECT CHAT_ROOM_ID_SEQ.CURRVAL FROM DUAL
		</selectKey>
	</insert>
	
	<update id="updateUserExitPoint" parameterType="chatRoomVO">
		UPDATE CHAT_ROOM_USER
		SET 
			EXIT_POINT = #{exitPoint}
		WHERE
			CHAT_ROOM_ID = #{chatRoomId} AND USER_ID = #{requestUserId}
	</update>
	
</mapper>




<!-- 백업 -->
<!-- 
<select id="getChatRoomListByUserId" resultType="chatRoomVO" parameterType="userVO">
	SELECT 
		C.CHAT_ROOM_ID
	    , C.POST_ID
	    , C.CHAT_ROOM_REGDATE
	    , M.MESSAGE_CONTENT LAST_MESSAGE
	    , M.MESSAGE_TYPE LAST_MESSAGE_TYPE
	    , TRUNC((SYSDATE - M.MESSAGE_TIME) * 24 * 60) LAST_MESSAGE_TIME
	    , U.USER_NICKNAME OTHER_USER_NICKNAME
	    , PR_F.FILE_NAME OTHER_USER_PROFILE_PIC
	    , PO_F.FILE_NAME FIRST_POST_PIC
	FROM
	    CHAT_ROOM C
	INNER JOIN
	    CHAT_MESSAGE M ON M.CHAT_ROOM_ID = C.CHAT_ROOM_ID AND M.MESSAGE_TYPE IN ('CHAT', 'PIC')
	INNER JOIN
	    CHAT_ROOM_USER CU ON CU.CHAT_ROOM_ID = C.CHAT_ROOM_ID AND CU.USER_ID != #{userId}
	INNER JOIN
	    USERS U ON U.USER_ID IN CU.USER_ID
	INNER JOIN
	    PROFILE_PIC PR_P ON PR_P.USER_ID = U.USER_ID
	INNER JOIN
	    POST_PIC PO_P ON PO_P.POST_ID = C.POST_ID
	INNER JOIN
	    FILES PR_F ON PR_F.FILE_ID =PR_P.FILE_ID
	INNER JOIN
	    FILES PO_F ON PO_F.FILE_ID = PO_P.FILE_ID
	WHERE
	    C.CHAT_ROOM_ID IN (SELECT CHAT_ROOM_ID FROM CHAT_ROOM_USER WHERE USER_ID = #{userId})
	    AND
	    ROWNUM = 1
	ORDER BY
	    M.MESSAGE_ID DESC
</select>
 -->